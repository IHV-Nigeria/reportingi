<org.openmrs.module.reporting.dataset.definition.SqlDataSetDefinition id="1" uuid="4414510e-4153-4bdd-aa9e-132261a394ac" retired="false">
  <name>BiometricLineList</name>
  <description>Line list of all patients with biometric data capture</description>
  <creator id="2" uuid="A4F30A1B-5EB9-11DF-A648-37A07F9C90FB"/>
  <dateCreated id="3">2021-09-23 14:25:48 UTC</dateCreated>
  <changedBy id="4" uuid="1658873e-8ada-47ca-9694-381b9a6fd776"/>
  <dateChanged id="5">2023-07-13 18:22:28 UTC</dateChanged>
  <parameters id="6">
    <org.openmrs.module.reporting.evaluation.parameter.Parameter id="7">
      <name>startDate</name>
      <label>startDate</label>
      <type>java.util.Date</type>
      <required>true</required>
    </org.openmrs.module.reporting.evaluation.parameter.Parameter>
    <org.openmrs.module.reporting.evaluation.parameter.Parameter id="8">
      <name>endDate</name>
      <label>endDate</label>
      <type>java.util.Date</type>
      <required>true</required>
    </org.openmrs.module.reporting.evaluation.parameter.Parameter>
  </parameters>
  <id>252</id>
  <sqlQuery>SELECT &#xd;
(SELECT `name` FROM `address_hierarchy_entry` WHERE `level_id`=2 AND `user_generated_id` =&#xd;
(SELECT property_value FROM global_property WHERE property=&apos;partner_reporting_state&apos; )) AS State,&#xd;
gp1.property_value as DatimCode,&#xd;
gp2.property_value as FacilityName,&#xd;
patient.patient_id,&#xd;
person.gender as Sex,&#xd;
DATE_FORMAT(person.birthdate,&apos;%d-%b-%Y&apos;) as DOB,&#xd;
pid1.identifier as PepfarID,&#xd;
pid2.identifier as HospID,&#xd;
IF(hasbiometric.patient_Id IS NOT NULL,&quot;Yes&quot;,&quot;No&quot;) as BiometricCaptured,&#xd;
IF(hasbiometric.patient_Id IS NOT NULL,&#xd;
&#xd;
IF(invalidbio.patient_Id IS NOT NULL,&quot;No&quot;,&quot;Yes&quot;)&#xd;
,&quot;&quot;) as ValidBiometric,&#xd;
DATE_FORMAT(hasbiometric.date_created,&apos;%d-%b-%Y&apos;) as DateCreated,&#xd;
e1.LastCareCardDate,&#xd;
e1.LastLabOrderFormDate,&#xd;
e1.LastPharmacyDate,&#xd;
DATE_FORMAT(b.RecaptureDate,&apos;%d-%b-%Y&apos;) as RecaptureDate,&#xd;
b.recapture_count as RecaptureCount,&#xd;
b.NumberOfFingers as NumberOfFingers,&#xd;
b.FPLowQuality as FPLowQuality,&#xd;
b.FPHighQuality as FPHighQuality,&#xd;
b.AverageFPQuality as AverageFPQuality,&#xd;
b.LowestFPQuality as LowestFPQuality&#xd;
&#xd;
&#xd;
from &#xd;
patient LEFT JOIN person on(person.person_id=patient.patient_id and person.voided=0)&#xd;
LEFT JOIN patient_identifier pid1 on(pid1.patient_id=patient.patient_id and pid1.identifier_type=4 and pid1.voided=0)&#xd;
LEFT JOIN patient_identifier pid2 on(pid2.patient_id=patient.patient_id and pid2.identifier_type=5 and pid2.voided=0)&#xd;
LEFT JOIN person_name on(patient.patient_id=person_name.person_id and person_name.voided=0)&#xd;
INNER JOIN patient_program on(patient.patient_id=patient_program.patient_id and patient_program.program_id=1 and patient_program.voided=0)&#xd;
LEFT JOIN (select DISTINCT&#xd;
patient_Id,&#xd;
biometricinfo.date_created&#xd;
from biometricinfo GROUP BY patient_Id) as hasbiometric on(patient.patient_id=hasbiometric.patient_Id)&#xd;
LEFT JOIN (select&#xd;
DISTINCT&#xd;
biometricinfo.patient_Id,&#xd;
biometricinfo.date_created&#xd;
from&#xd;
biometricinfo&#xd;
where &#xd;
template not like &apos;Rk1S%&apos;&#xd;
   OR&#xd;
CONVERT(new_template using utf8) not like &apos;Rk1S%&apos; GROUP BY patient_Id) as invalidbio on(patient.patient_id=invalidbio.patient_Id)&#xd;
LEFT JOIN (SELECT patient_Id, MAX(date_created) AS RecaptureDate, recapture_count, count(fingerPosition) as NumberOfFingers, MIN(imageQuality) as LowestFPQuality, CEILING(AVG(imageQuality)) as AverageFPQuality, COUNT(IF(imageQuality&lt;80, 1, NULL)) as FPLowQuality, COUNT(IF(imageQuality&lt;80, NULL, 1)) as FPHighQuality&#xd;
FROM biometricverificationinfo &#xd;
GROUP BY patient_Id) as b on(patient.patient_id=b.patient_Id)&#xd;
&#xd;
LEFT JOIN (SELECT &#xd;
patient_id, &#xd;
form_id,&#xd;
DATE_FORMAT(MAX(CASE WHEN encounter.form_id = 14 THEN encounter.encounter_datetime END), &apos;%d-%b-%Y&apos;) AS LastCareCardDate,&#xd;
DATE_FORMAT(MAX(CASE WHEN encounter.form_id = 21 THEN encounter.encounter_datetime END), &apos;%d-%b-%Y&apos;) AS LastLabOrderFormDate,&#xd;
DATE_FORMAT(MAX(CASE WHEN encounter.form_id = 27 THEN encounter.encounter_datetime END), &apos;%d-%b-%Y&apos;) AS LastPharmacyDate&#xd;
FROM encounter where form_id in (27,14,21) and voided=0 GROUP BY patient_id) as e1 on (e1.patient_id = patient.patient_id)&#xd;
LEFT JOIN global_property gp1 on(gp1.property=&apos;facility_datim_code&apos;)&#xd;
LEFT JOIN global_property gp2 on(gp2.property=&apos;Facility_Name&apos;)&#xd;
&#xd;
where hasbiometric.date_created &lt;= :endDate&#xd;
ORDER BY patient.patient_id</sqlQuery>
</org.openmrs.module.reporting.dataset.definition.SqlDataSetDefinition>
